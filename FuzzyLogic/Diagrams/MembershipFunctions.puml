@startuml

namespace Number {

class FuzzyNumber {
static abstract operator !(FuzzyNumber a)
static abstract operator &(FuzzyNumber a, FuzzyNumber b)
static abstract operator |(FuzzyNumber a, FuzzyNumber b)
}

}

namespace Interfaces {

interface IMembershipFunction<T> {
string Name()
bool IsOpenLeft()
bool IsOpenRight()
bool IsClosed()
bool IsSymmetric()
bool IsNormal()
bool IsConcave()
bool IsConvex()
T LowerBoundary()
T UpperBoundary()
(T x0, T x1) BoundaryInterval()
(double x0, double x1) LambdaCutInterval(FuzzyNumber y)
(double x0, double x1) CrossoverCutInterval()
Func<T, double> SimpleFunction()
Func<T, double> LambdaCutFunction(FuzzyNumber y)
Func<T, double> LambdaCutFunction(FuzzyNumber y, double x1, double x2)
FuzzyNumber MembershipDegree(T x)
(T x, FuzzyNumber y) ToPoint(T x)
}

interface IRealFunction

interface ITrapezoidalFunction<T> {
(T x0, T x1) CoreInterval()
(T x0, T x1) LeftSupportInterval()
(T x0, T x1) RightSupportInterval()
}

interface IAsymptoteFunction<T> {
T ApproximateLowerBoundary()
T ApproximateUpperBoundary()
(T x0, T x1) ApproximateBoundaryInterval()
}

IRealFunction -[hidden] IAsymptoteFunction
IAsymptoteFunction -[hidden] ITrapezoidalFunction

}

Number -[hidden] Interfaces

namespace BaseImpl {

abstract class BaseMembershipFunction<T>
abstract class BaseGaussianFunction<T>
abstract class BaseSigmoidFunction<T>
abstract class BaseTrapezoidalFunction<T>
abstract class BaseTriangularFunction<T>

BaseGaussianFunction -[hidden] BaseSigmoidFunction
BaseSigmoidFunction -[hidden] BaseTrapezoidalFunction
}

namespace RealImpl {
class RealGaussianFunction
class RealSigmoidFunction
class RealTrapezoidalFunction
class RealTriangularFunction

RealGaussianFunction -[hidden] RealSigmoidFunction
RealSigmoidFunction -[hidden] RealTrapezoidalFunction
RealTrapezoidalFunction -[hidden] RealTriangularFunction
}

Interfaces.IMembershipFunction <|-- Interfaces.IRealFunction
Interfaces.IMembershipFunction <|-- Interfaces.IAsymptoteFunction

Interfaces.IMembershipFunction <|-- BaseImpl.BaseMembershipFunction

Interfaces.IAsymptoteFunction <|-- BaseImpl.BaseSigmoidFunction
Interfaces.IAsymptoteFunction <|-- BaseImpl.BaseGaussianFunction

Interfaces.ITrapezoidalFunction <|-- BaseImpl.BaseTrapezoidalFunction

Interfaces.IRealFunction <|-- RealImpl.RealSigmoidFunction
Interfaces.IRealFunction <|-- RealImpl.RealGaussianFunction
Interfaces.IRealFunction <|-- RealImpl.RealTrapezoidalFunction
Interfaces.IRealFunction <|-- RealImpl.RealTriangularFunction

BaseImpl.BaseTriangularFunction -d--> BaseImpl.BaseTrapezoidalFunction
BaseImpl.BaseSigmoidFunction -d--> BaseImpl.BaseMembershipFunction
BaseImpl.BaseGaussianFunction -d--> BaseImpl.BaseMembershipFunction
BaseImpl.BaseTrapezoidalFunction -d--> BaseImpl.BaseMembershipFunction

RealImpl.RealSigmoidFunction --> BaseImpl.BaseSigmoidFunction
RealImpl.RealGaussianFunction --> BaseImpl.BaseGaussianFunction
RealImpl.RealTrapezoidalFunction --> BaseImpl.BaseTrapezoidalFunction
RealImpl.RealTriangularFunction --> BaseImpl.BaseTriangularFunction

@enduml